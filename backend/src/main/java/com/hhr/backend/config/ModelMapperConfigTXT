package com.hhr.backend.config;

import com.hhr.backend.dto.category.CategoryResponseDTO;
import com.hhr.backend.dto.feature.FeatureResponseDTO;
import com.hhr.backend.dto.image.ImageResponseDTO;
import com.hhr.backend.dto.product.ProductResponseDTO;
import com.hhr.backend.entity.Category;
import com.hhr.backend.entity.Feature;
import com.hhr.backend.entity.Image;
import com.hhr.backend.entity.Product;
import org.modelmapper.ModelMapper;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ModelMapperConfig {

    @Bean
    public ModelMapper modelMapper() {

        ModelMapper modelMapper = new ModelMapper();

        modelMapper.createTypeMap(Product.class, ProductResponseDTO.class)
                .addMapping(src -> src.getCreatedBy().getId(), ProductResponseDTO::setCreatedByUserId)
                .addMapping(src -> src.getUpdatedBy().getId(), ProductResponseDTO::setUpdatedByUserId);
        modelMapper.createTypeMap(Category.class, CategoryResponseDTO.class)
                .addMapping(src -> src.getCreatedBy().getId(), CategoryResponseDTO::setCreatedByUserId)
                .addMapping(src -> src.getUpdatedBy().getId(), CategoryResponseDTO::setUpdatedByUserId);
        modelMapper.createTypeMap(Feature.class, FeatureResponseDTO.class)
                .addMapping(src -> src.getCreatedBy().getId(), FeatureResponseDTO::setCreatedByUserId)
                .addMapping(src -> src.getUpdatedBy().getId(), FeatureResponseDTO::setUpdatedByUserId);
        modelMapper.createTypeMap(Image.class, ImageResponseDTO.class)
                .addMapping(src -> src.getCreatedBy().getId(), ImageResponseDTO::setCreatedByUserId)
                .addMapping(src -> src.getUpdatedBy().getId(), ImageResponseDTO::setUpdatedByUserId);

        return modelMapper;
    }
}
